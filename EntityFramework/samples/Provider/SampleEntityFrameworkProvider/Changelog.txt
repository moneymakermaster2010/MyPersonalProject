Changes from Beta1:

	Overall project:
	  Renamed from OrcasSampleProvider to SampleEntityFrameworkProvider

	ProviderServices:
	  Remove CreateCommandDefinition(DbCommand prototype)
	  Rename CreateCommandDefinition(DbConnection connection, DbCommandTree commandTree) to CreateDbCommandDefinition, mark as protected
	  Remove GetProviderManifest
	  Add GetDbInformation

	SqlGenerator:
	  Rename Namespace NamespaceName in HandleDatepartDateFunction, WriteFunctionName functions
	  GetSqlPrimitiveType overhauled
	  Visit(DbGroupByExpression) overhauled
	  Added support for canonical functions
  
	MetadataHelpers:
	  Remove reference to PrimitiveTypeKind.Money, PrimitiveTypeKind.Xml in GetDbType

Changes from Beta2:
	Overall project:
	  Added DbProviderManifest class

	ProviderServices:
	  GetDbInformation(string, DbConnection) : XmlReader replaced with GetDbProviderManifest(DbConnection or string) :DbProviderManifest

	Resources:
	  All resources (.csdl, .ssdl, .msl, .xsd) were updated (from product code; it is difficult for me to explain the changes); providermanifest.xml has more changes than any otherâ€¦

	MetadataHelpers:
	  Removed references to  PrimitiveTypeKind.UInt* in GetDbType 
	  Added GetFacetValueOrDefault helper

	SqlGenerator:
	  Fixed NPE in Visit(DbConstantExpression)
	  Fixed bug with parentheses and multiple function arguments in HandleFunctionArgumentsDefault 
	  HandleCanonicalFunctionLength no longer compensates for LEN SQL function not counting trailing whitespaces
	  Changed logic converting PrimitiveType to sql type in GetSqlPrimitiveType
	  WriteFunctionName uses schema name to create quoted function name

	Connection:
	  Changed DataSource property to use DataSource property of wrapped connection (it was using DataBase property before)

Changes from Beta3
	Removed DbProviderServices.GetProviderManifest(DbConnection)
	Added DbProviderServices.GetProviderManifestToken(DbConnection) 
	Completely redesigned CSDL/SSDL/MSL for SchemaInformation
	Changed the format of the provider manifest XML:
		- DefaultValue vs Default
		- removed facets from functions 
	Added DbProviderManifest.Token/DbProviderManifest.Provider properties 
	  (they are not used in SP1Beta and will removed in RTM).

Changes from SP1 Beta
	Removed DbProviderManifest.Token and DbProviderManifest.Provider properties
	Removed DbFunctionExpression.IsLambda
	Renamed DbFunctionCommandTree.Function to DbFunctionCommandTree.EdmFunction
	Removed DbCommandTree.Validate()

Changes in .NET Framework 4 Beta2

	Updated the provider to support Entity Framework runtime features introduced in .NET 4.0 Beta 1 and .NET 4.0 Beta 2 that impact providers. 
		- Added support for the canonical functions introduced by .NET 4.0 Beta 1. 
		- Added FunctionStubGenerator, a sample tool to generate a class that exposes the sample provider's store functions to LINQ to Entites users.
		- Added support for the feature "Translating String.StartsWith, String.EndsWith and String.Contains to LIKE in LINQ to Entities". In particular, the methods DbProviderManifest.SupportsEscapingLikeArgument and DbProviderManifest.EscapeLikeArgument have been implemented.
		- Added support for SQL Server 2008. The sample provider now supports both SQL Server 2005 and SQL Server 2008.
		- Added DDL generation support for DatabaseExists/DeleteDatabase/CreateDatabase
	Minor code refactoring.
    
Changes in Entity Framework 5 (.NET Framework 4.5 required)
    
	Updated the provider to support features introduced in Entity Framework 5:
		- CSDL/MSL/SSDL artifacts moved to version 3.0
		- Added support for spatial types and functions
		- Added tests to verify that stored procedures with multiple resultset work with the provider
		- Added tests to verify that Table Valued Functions work with the provider
		- Updated schema views to use version 3.0 of MSL and SSDL to enable generating code for TVFs

	Updated DDEX Provider to work with Visual Studio 11
	
	ConsoleTests converted to xUnit

	